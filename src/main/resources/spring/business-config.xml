<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/jdbc
	    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	    http://www.springframework.org/schema/data/jpa
	    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<bean id="filterMultipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<property name="maxUploadSize" value="-1" />
	</bean>

	<bean id="emailService" class="org.bookmarks.service.EmailServiceImpl">
		<property name="mailSender" ref="mailSender" />
	</bean>

	<bean id="chipsRestTemplate" class="org.springframework.web.client.RestTemplate"
		p:interceptors-ref="interceptors">
	</bean>

	<util:list id="interceptors">
		<bean id="basicAuthorizationInterceptor"
			class="org.springframework.http.client.support.BasicAuthorizationInterceptor">
			<constructor-arg index="0" value="${chips.username}" />
			<constructor-arg index="1" value="${chips.password}" />
		</bean>
<!--
		<bean id="loggingRequestInterceptor" class="org.bookmarks.logging.LoggingRequestInterceptor">
		</bean>
-->
	</util:list>

 <bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
   <property name="templateLoaderPath"><value>/</value></property>
 </bean>

	<!-- Encryption -->
	<bean id="bcProvider" class="org.bouncycastle.jce.provider.BouncyCastleProvider" />

	<bean id="beansEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="algorithm" value="${db.encrypt.algorithm}" />
		<property name="password" value="${db.encrypt.password}" />
		<property name="provider">
			<ref bean="bcProvider" />
		</property>
	</bean>

	<bean id="jsonEcryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="algorithm" value="${json.encrypt.algorithm}" />
		<property name="password" value="${json.encrypt.password}" />
		<property name="provider">
			<ref bean="bcProvider" />
		</property>
	</bean>

	<bean id="hibernateStringEncryptor"
		class="org.jasypt.hibernate5.encryptor.HibernatePBEStringEncryptor">
		<property name="registeredName">
			<value>strongHibernateStringEncryptor</value>
		</property>
		<property name="encryptor">
			<ref bean="beansEncryptor" />
		</property>
	</bean>


	<!-- <jpa:repositories base-package="org.bookmarks.repository.data"/> -->

	<!-- Scan for service and repository beans -->
	<context:component-scan base-package="org.bookmarks">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<context:property-placeholder
		properties-ref="applicationProperties" />

	<util:properties id="emailProperties" location="classpath:spring/email.properties" />
	<context:property-placeholder
		properties-ref="emailProperties" />

	<!-- Enable @Scheduled (used by DailyReport) -->
	<task:annotation-driven />

	<bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy" />

	<!-- TRANSACTION MANAGEMENT -->

	<bean class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		id="transactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven mode="proxy"
		transaction-manager="transactionManager" />

	<beans profile="prod">

		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="auth.smtp.1and1.co.uk" />
			<property name="port" value="587" />
			<property name="username" value="${email.username}" />
			<property name="password" value="${email.password}" />
			<property name="javaMailProperties">
				<props>
					<!-- Use SMTP-AUTH to authenticate to SMTP server -->
					<prop key="mail.debug">false</prop>
					<prop key="mail.smtp.auth">true</prop>
					<!-- Use TLS to encrypt communication with SMTP server -->
					<prop key="mail.smtp.starttls.enable">true</prop>
				</props>
			</property>
		</bean>

		<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url"
				value="jdbc:mysql://localhost/bookmarks?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
			<property name="username" value="${db.beans.user}" />
			<property name="password" value="${db.beans.password}" />
			<property name="testOnBorrow" value="true" />
			<property name="testOnReturn" value="true" />
			<property name="testWhileIdle" value="true" />
			<property name="timeBetweenEvictionRunsMillis" value="1800000" />
			<property name="numTestsPerEvictionRun" value="3" />
			<property name="minEvictableIdleTimeMillis" value="1800000" />
			<property name="validationQuery" value="SELECT 1" />
		</bean>

		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="packagesToScan">
				<value>org.bookmarks.domain</value>
			</property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.connection.useUnicode">true</prop>
					<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
					<prop key="hibernate.connection.charSet">UTF-8</prop>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<prop key="hibernate.hbm2ddl.auto">validate</prop>
					<prop key="hibernate.show_sql">false</prop>
					<prop key="hibernate.format_sql">false</prop>
				</props>
			</property>
		</bean>

		<util:properties id="applicationProperties"
			location="classpath:spring/application.prod.properties" />

	</beans>

	<beans profile="dev,mini-beans">

		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="auth.smtp.1and1.co.uk" />
			<property name="port" value="587" />
			<property name="username" value="${email.username}" />
			<property name="password" value="${email.password}" />
			<property name="javaMailProperties">
				<props>
					<!-- Use SMTP-AUTH to authenticate to SMTP server -->
					<prop key="mail.debug">false</prop>
					<prop key="mail.smtp.auth">true</prop>
					<!-- Use TLS to encrypt communication with SMTP server -->
					<prop key="mail.smtp.starttls.enable">true</prop>
				</props>
			</property>
		</bean>

		<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url"
				value="jdbc:mysql://localhost/bookmarks?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
			<property name="username" value="${db.beans.user}" />
			<property name="password" value="${db.beans.password}" />
		</bean>

		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="packagesToScan">
				<value>org.bookmarks.domain</value>
			</property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.connection.useUnicode">true</prop>
					<prop key="hibernate.physical_naming_strategy">org.bookmarks.config.SpringPhysicalNamingStrategy</prop>
					<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
					<prop key="hibernate.connection.charSet">UTF-8</prop>
					<prop key="hibernate.hbm2ddl.auto">validate</prop>
					<prop key="hibernate.show_sql">false</prop>
					<prop key="hibernate.format_sql">true</prop>
				</props>
			</property>
		</bean>

		<util:properties id="applicationProperties"
			location="classpath:spring/application.dev.properties" />

	</beans>

	<beans profile="test">
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url" value="jdbc:mysql://localhost/bookmarks_test?useSSL=false" />
			<property name="username" value="${db.beans.user}" />
			<property name="password" value="${db.beans.password}" />
		</bean>
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="packagesToScan">
				<value>org.bookmarks.domain</value>
			</property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.connection.useUnicode">true</prop>
					<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
					<prop key="hibernate.connection.charSet">UTF-8</prop>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
					<prop key="hibernate.show_sql">false</prop>
					<prop key="hibernate.format_sql">true</prop>
				</props>
			</property>
		</bean>

		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="auth.smtp.1and1.co.uk" />
			<property name="port" value="587" />
			<property name="username" value="${email.username}" />
			<property name="password" value="${email.password}" />
			<property name="javaMailProperties">
				<props>
					<!-- Use SMTP-AUTH to authenticate to SMTP server -->
					<prop key="mail.debug">false</prop>
					<prop key="mail.smtp.auth">true</prop>
					<!-- Use TLS to encrypt communication with SMTP server -->
					<prop key="mail.smtp.starttls.enable">true</prop>
				</props>
			</property>
		</bean>

		<util:properties id="applicationProperties"
			location="classpath:spring/application.dev.properties" />

	</beans>

	<beans profile="test">
		<jdbc:initialize-database data-source="dataSource">

			<jdbc:script location="classpath:db/build-test.sql" />

		</jdbc:initialize-database>
	</beans>
</beans>
